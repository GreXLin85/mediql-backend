type Query {
  post(id: ID!): Post
  posts(skip: Int, take: Int): [Post]!
}

input PostCreateInput {
  published: Boolean!
  title: String!
  content: String!
  authorId: ID!
}

input PostUpdateInput {
  published: Boolean
  title: String
  content: String
  viewCount: Int
  authorId: ID
}

type Mutation {
  createPost(post: PostCreateInput!): Post @isLoggedIn
  updatePost(id: ID!, post: PostUpdateInput!): Post @isLoggedIn
  deletePost(id: ID!): Post @isLoggedIn
}

scalar DateTime

type Post {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  published: Boolean!
  title: String!
  content: String
  viewCount: Int!
  likeCount: Int
  likedBy: [User] @auth(requires: [REVIEWER,ADMIN])
  author: User!
}